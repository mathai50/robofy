# Alternative Dockerfile using Debian slim (potentially fewer vulnerabilities)
FROM node:20-slim AS builder

WORKDIR /app

# Install security updates and required packages
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Copy package files
COPY package*.json ./
COPY package-lock.json ./

# Install dependencies with exact versions and security audit
RUN npm ci && npm audit --audit-level=moderate

# Copy source code
COPY . .

# Build the application
RUN npm run build

FROM node:20-slim AS production

WORKDIR /app

# Install security updates
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Copy package files
COPY package*.json ./
COPY package-lock.json ./

# Install production dependencies only with security audit
RUN npm ci --omit=dev && npm audit --audit-level=moderate

# Copy built application from builder
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/next.config.js ./
COPY --from=builder /app/package.json ./

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash nextjs

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1

# Start the application
CMD ["npm", "start"]